// <auto-generated />
using System;
using LicenciasMedicasGL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LicenciasMedicasGL.Migrations
{
    [DbContext(typeof(LicenciasMedicasContext))]
    [Migration("20230122003311_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LicenciasMedicasGL.Models.Licencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("VisitaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ObraSocial")
                        .HasColumnType("int");

                    b.Property<int>("TelefonoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Prestadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TelefonoContactoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TelefonoContactoId");

                    b.ToTable("Prestadoras");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTelefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadDias")
                        .HasColumnType("int");

                    b.Property<bool>("Cargada")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTimeOffset>("FechaFin")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaInicio")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaYHoraVisita")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Justificada")
                        .HasColumnType("bit");

                    b.Property<int>("LicenciaId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("LicenciaId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Empleado", b =>
                {
                    b.HasBaseType("LicenciasMedicasGL.Models.Persona");

                    b.Property<string>("Legajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("LicenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("estaActivo")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Medico", b =>
                {
                    b.HasBaseType("LicenciasMedicasGL.Models.Persona");

                    b.Property<int>("LicenciaId")
                        .HasColumnName("Medico_LicenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int>("PestadoraId")
                        .HasColumnType("int");

                    b.Property<int?>("PrestadoraId")
                        .HasColumnType("int");

                    b.HasIndex("PrestadoraId");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Licencia", b =>
                {
                    b.HasOne("LicenciasMedicasGL.Models.Empleado", "Empleado")
                        .WithMany("Licencias")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenciasMedicasGL.Models.Medico", "Medico")
                        .WithMany("Licencias")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Prestadora", b =>
                {
                    b.HasOne("LicenciasMedicasGL.Models.Telefono", "TelefonoContacto")
                        .WithMany()
                        .HasForeignKey("TelefonoContactoId");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Telefono", b =>
                {
                    b.HasOne("LicenciasMedicasGL.Models.Persona", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Visita", b =>
                {
                    b.HasOne("LicenciasMedicasGL.Models.Licencia", "Licencia")
                        .WithMany("Visitas")
                        .HasForeignKey("LicenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenciasMedicasGL.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LicenciasMedicasGL.Models.Medico", b =>
                {
                    b.HasOne("LicenciasMedicasGL.Models.Prestadora", "Prestadora")
                        .WithMany("Medicos")
                        .HasForeignKey("PrestadoraId");
                });
#pragma warning restore 612, 618
        }
    }
}
